/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
       if (head == null || head.next == null) {
            return head; // empty or single-node list
        }
        ListNode dummy = new ListNode(0);
        dummy.next=head;
        ListNode current = head;
        ListNode prev=dummy;

        while (current != null && current.next != null) {
            if (current.val != current.next.val) {
                prev=prev.next;
                current=current.next ;   
                 // skip duplicate and del all
            } else {
               while(current.next != null && current.val== current.next.val){
                   current = current.next;
               }
               prev.next=current.next;
               current=current.next;
            }
        }

        return dummy.next; 
    }
}
