class Solution {
    public List<Integer> findDuplicates(int[] nums) {
        /*HashMap<Integer,Integer> hm = new HashMap<>();
        for(int i=0;i<nums.length; i++){
            if(hm.containsKey(nums[i])){
                hm.put(nums[i],hm.get(nums[i])+1 );
            }else{
                hm.put(nums[i],1);
            }
        }
        List<Integer> list = new ArrayList<>();
        for(Map.Entry<Integer,Integer> e : hm.entrySet()){
            if(e.getValue()==2){
                list.add(e.getKey());
            }
        }
        return list; 
        */
        List<Integer> duplicates = new ArrayList<>();

        for (int i = 0; i < nums.length; i++) {
            int index = Math.abs(nums[i]) - 1;

            // If nums[index] is negative, it means we have seen this value before
            if (nums[index] < 0) {
                duplicates.add(index + 1);
            } else {
                // Mark the element as visited by negating its value
                nums[index] = -nums[index];
            }
        }

        return duplicates;
    }
}
